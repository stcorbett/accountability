{"version":3,"sources":["Teams.js","Created.js","CountryDropdown.js","TimeSelect.js","DateSelect.js","App.js","serviceWorker.js","index.js"],"names":["Teams","className","to","Created","friendOptions","key","text","value","CountryDropdown","Dropdown","inline","options","defaultValue","TimeSelect","DateSelect","App","state","who","when","handleWhoClick","e","preventDefault","target","dataset","param","setState","handleWhenClick","console","log","this","basename","style","maxWidth","width","href","path","data-toggle","onClick","data-param","type","name","id","autoComplete","placeholder","includes","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b05c9f9.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst Teams = () => (\n  <div>\n    <div className=\"row mb-4 pb-2 \">\n      <div className=\"col\">\n        <div className=\"row\">\n          <div className=\"col h3 m-0\">\n            Sean\n            <span className=\"h5\">\n              &nbsp; Coaching\n            </span>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            10 Promises\n          </div>\n          <div className=\"col text-right\">\n            <u className=\"text-muted text-warning underline-warning\">2 need completion</u>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            3 this week\n          </div>\n          <div className=\"col text-right\">\n            <Link to=\"/\" className=\"\">\n              <span className=\"text-primary\">+</span> Promise\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"row mb-4\">\n      <div className=\"col\">\n        <div className=\"row\">\n          <div className=\"col h3 m-0\">\n            Julia\n            <span className=\"h5\">\n              &nbsp; Coaching\n            </span>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            3 Promises\n          </div>\n          <div className=\"col text-right\">\n            <u className=\"text-muted underline-warning\">2 need completion</u>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            1 this week\n          </div>\n          <div className=\"col text-right\">\n            <Link to=\"/\" className=\"\">\n              <span className=\"text-primary\">+</span> Promise\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"row mb-4\">\n      <div className=\"col\">\n        <div className=\"row\">\n          <div className=\"col h5 m-0\">\n            TMLP Seattle - Powerful Leaders Causing Transformation in the World\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            40 Promises\n          </div>\n          <div className=\"col text-right\">\n            <u className=\"text-muted underline-warning\">9 need completion</u>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            18 this week\n          </div>\n          <div className=\"col text-right\">\n            <Link to=\"/\" className=\"\">\n              <span className=\"text-primary\">+</span> Promise\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"row mb-4\">\n      <div className=\"col\">\n        <div className=\"row\">\n          <div className=\"col h5 m-0\">\n            Retreat and Resort: Rejuvination to impact lives\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            8 Promises\n          </div>\n          <div className=\"col text-right\">\n            <span className=\"text-muted\">0 need completion</span>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            2 this week\n          </div>\n          <div className=\"col text-right\">\n            <Link to=\"/\" className=\"\">\n              <span className=\"text-primary\">+</span> Promise\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"row bg-light mt-5\">\n      <Link to=\"#\" className=\"col h3 m-0 p-3 text-center\">\n        Add Team\n      </Link>\n    </div>\n  </div>\n)\n\nexport default Teams\n","import React from 'react'\n\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst Created = () => (\n  <div>\n    <div className=\"text-center\">\n      Sean will complete the clickable prototype<br/>\n      By tomorrow at Midnight\n    </div>\n\n    <div className=\"row mt-5\">\n      <Link to=\"/\" className=\"col h3 m-0 p-3 text-center\">\n        Change This\n      </Link>\n    </div>\n\n    <div className=\"row bg-info\">\n      <Link to=\"/\" className=\"col text-white h3 m-0 p-3 text-center\">\n        Create Again\n      </Link>\n    </div>\n  </div>\n)\n\nexport default Created\n","/*eslint no-unused-vars: 0*/\n\nimport React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\n\nconst countryOptions = [\n  { key: 'me', value: 'me', text: 'Other' },\n  { key: 'sc', value: 'sc', text: 'Sean Corbett' },\n  { key: 'rk', value: 'rk', text: 'Ranny Kang' },\n]\n\n// const CountryxDropdown = () => (\n//   <Dropdown\n//     placeholder='Who'\n//     fluid\n//     search\n//     selection\n//     default=\"sc\"\n//     options={countryOptions}\n//   />\n// )\nconst friendOptions = [\n  {\n    key:    'Me',\n    text:   'Other',\n    value:  'Me',\n  },\n  {\n    key:    'Ranny Kang',\n    text:   'James I.',\n    value:  'Ranny Kang',\n  },\n  {\n    key:    'Sean Corbett',\n    text:   'Jeff T.',\n    value:  'Sean Corbett',\n  },\n]\n\nconst CountryDropdown = () => (\n  <span className=\"label-input100\">\n    <Dropdown\n      inline\n      options={friendOptions}\n      defaultValue={friendOptions[0].value}\n    />\n  </span>\n)\n\nconst CountryyDropdown = () => (\n  <span>\n    Accountable: {' '}\n    <Dropdown text='Accountable' inline icon='filter'       defaultValue={friendOptions[0].value}>\n      <Dropdown.Menu>\n        <Input icon='search' iconPosition='left' className='search' />\n        <Dropdown.Divider />\n        <Dropdown.Header icon='tags' content='Tag Label' />\n        <Dropdown.Menu scrolling>\n          {friendOptions.map((option) => (\n            <Dropdown.Item key={option.value} {...option} />\n          ))}\n        </Dropdown.Menu>\n      </Dropdown.Menu>\n    </Dropdown>\n  </span>\n)\n\n\nexport default CountryDropdown\n","/*eslint no-unused-vars: 0*/\n\nimport React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\n\nconst countryOptions = [\n  { key: 'me', value: 'me', text: 'Other' },\n  { key: 'sc', value: 'sc', text: 'Sean Corbett' },\n  { key: 'rk', value: 'rk', text: 'Ranny Kang' },\n]\n\n// const CountryxDropdown = () => (\n//   <Dropdown\n//     placeholder='Who'\n//     fluid\n//     search\n//     selection\n//     default=\"sc\"\n//     options={countryOptions}\n//   />\n// )\nconst friendOptions = [\n  {\n    key:    'Me',\n    text:   'Midnight',\n    value:  'Me',\n  },\n  {\n    key:    'Ranny Kang',\n    text:   '8AM',\n    value:  'Ranny Kang',\n  },\n  {\n    key:    'Sean Corbett',\n    text:   'Noon',\n    value:  'Sean Corbett',\n  },\n  {\n    key:    '5',\n    text:   '5PM',\n    value:  '5',\n  },\n  {\n    key:    '9',\n    text:   '9PM',\n    value:  '9',\n  },\n]\n\nconst TimeSelect = () => (\n  <span className=\"label-input100\">\n    <Dropdown\n      inline\n      options={friendOptions}\n      defaultValue={friendOptions[0].value}\n    />\n  </span>\n)\n\nexport default TimeSelect\n","/*eslint no-unused-vars: 0*/\n\nimport React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\n\nconst countryOptions = [\n  { key: 'me', value: 'me', text: 'Other' },\n  { key: 'sc', value: 'sc', text: 'Sean Corbett' },\n  { key: 'rk', value: 'rk', text: 'Ranny Kang' },\n]\n\n// const CountryxDropdown = () => (\n//   <Dropdown\n//     placeholder='Who'\n//     fluid\n//     search\n//     selection\n//     default=\"sc\"\n//     options={countryOptions}\n//   />\n// )\nconst friendOptions = [\n  {\n    key:    'Me',\n    text:   'Other',\n    value:  'Me',\n  },\n  {\n    key:    'Ranny Kang',\n    text:   '2 Weeks',\n    value:  'Ranny Kang',\n  },\n  {\n    key:    'Sean Corbett',\n    text:   '3 Weeks',\n    value:  'Sean Corbett',\n  },\n  {\n    key:    '5',\n    text:   '4 Weeks',\n    value:  '5',\n  },\n  {\n    key:    '9',\n    text:   '5 Weeks',\n    value:  '9',\n  },\n]\n\nconst DateSelect = () => (\n  <span className=\"label-input100\">\n    <Dropdown\n      inline\n      options={friendOptions}\n      defaultValue={friendOptions[0].value}\n    />\n  </span>\n)\n\nexport default DateSelect\n","import React from 'react';\nimport './App.css';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { FaSearch } from 'react-icons/fa';\n\nimport Teams from './Teams'\nimport Created from './Created'\n\nimport CountryDropdown from './CountryDropdown'\nimport TimeSelect from './TimeSelect'\nimport DateSelect from './DateSelect'\n\nclass App extends React.Component {\n  state = {\n    who: null,\n    when: null\n  };\n\n  handleWhoClick = (e) =>{\n    e.preventDefault();\n    let who = e.target.dataset.param\n    this.setState(state => ({\n      who: who\n    }));\n  }\n\n  handleWhenClick = (e) =>{\n    e.preventDefault();\n    let when = e.target.dataset.param\n    this.setState(state => ({\n      when: when\n    }));\n  }\n\n  render() {\n    console.log(\"rendering\")\n    console.log(\"who: \" + this.state.who)\n    console.log(\"when: \" + this.state.when)\n    console.log(\"when: \" + !!this.state.when)\n    console.log(\"when: \" + (!!this.state.when ? 'x' : 'd-none'))\n\n    return (\n      <Router basename='/'>\n        <div>\n          <nav className=\"container navbar navbar-dark bg-dark\" style={{maxWidth: \"375px\"}}>\n            <Link to=\"/teams\" className=\"\" className=\"navbar-brand mr-auto\" style={{width: \"37px\"}}>\n              ACT\n            </Link>\n            <div className=\"mx-auto\">\n                <a className=\"navbar-brand mr-0\" href=\"#\">\n                  Sean Coaching\n                </a>\n            </div>\n            <a className=\"navbar-brand m-0 ml-auto text-right\" href=\"#\" style={{width: \"37px\"}}>\n              <FaSearch />\n            </a>\n          </nav>\n\n\n          <div className=\"container\" style={{maxWidth: \"375px\"}}>\n            <div className=\"pt-2 pb-4\">\n              <h1>\n                <Switch>\n                  <Route path=\"/created\">\n                    Created Future\n                  </Route>\n                  <Route path=\"/teams\">\n                    Teams\n                  </Route>\n                  <Route path=\"/\">\n                   Promise\n                  </Route>\n                </Switch>\n              </h1>\n            </div>\n            <Switch>\n              <Route path=\"/created\">\n                <Created />\n              </Route>\n              <Route path=\"/teams\">\n                <Teams />\n              </Route>\n              <Route path=\"/\">\n                <div className=\"row mb-5\">\n                  <div className=\"col-3\">\n                    <h3>Who</h3>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                      <label className={'btn btn-outline-secondary ' + (this.state.who === \"Sean\" ? 'active' : '')} onClick={this.handleWhoClick} data-param={\"Sean\"}>\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\"/> Sean\n                      </label>\n                      &nbsp;\n                      <label className={'btn btn-outline-secondary ' + (this.state.who === \"Ranny\" ? 'active' : 'xxx')} onClick={this.handleWhoClick} data-param={\"Ranny\"}>\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\"/> Ranny\n                      </label>\n                      &nbsp;\n                      <label className={'btn btn-outline-secondary border-0'}>\n                        <CountryDropdown />\n                      </label>\n                    </div>\n\n                  </div>\n                </div>\n\n                <div className=\"row mb-5\">\n                  <div className=\"col-3\">\n                    <h3>What</h3>\n                  </div>\n                  <div className=\"col\">\n                    <textarea className=\"input100\" type=\"text\" name=\"name\" placeholder=\"Promising to cause...\" />\n\n                    <a href=\"#\" className=\"text-muted mt-2 d-block\">\n                     <span className=\"text-primary\">+</span> condition of completion\n                    </a>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-3\">\n                    <h3>By When</h3>\n                    <a href=\"#\" className=\"text-muted mt-2 d-block\">\n                     <span className=\"text-primary\">&#8227;</span> repeat\n                    </a>\n                  </div>\n                  <div className=\"col-9\">\n                    <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                      <label className={'btn btn-outline-secondary ' + (this.state.when === \"Today\" ? 'active' : '')} onClick={this.handleWhenClick} data-param={\"Today\"}>\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\"/> Today\n                      </label>\n                      &nbsp;\n                      <label className={'btn btn-outline-secondary ' + (this.state.when === \"Tomorrow\" ? 'active' : '')} onClick={this.handleWhenClick} data-param={\"Tomorrow\"}>\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\"/> Tomorrow\n                      </label>\n                      &nbsp;\n                      <label className={'btn btn-outline-secondary ' + (this.state.when === \"3-days\" ? 'active' : '')} onClick={this.handleWhenClick} data-param={\"3-days\"}>\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\"/> 3 Days\n                      </label>\n                      &nbsp;\n                      <label className={'btn btn-outline-secondary ' + (this.state.when === \"1-week\" ? 'active' : '')} onClick={this.handleWhenClick} data-param={\"1-week\"}>\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\"/> 1 Week\n                      </label>\n                      &nbsp;\n                      <label className={'btn btn-outline-secondary ' + (this.state.when === \"1-month\" ? 'active' : '')} onClick={this.handleWhenClick} data-param={\"1-month\"}>\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\"/> 1 Month\n                      </label>\n                      &nbsp;\n                      <label className={'btn btn-outline-secondary border-0'}>\n                        <DateSelect />\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row mb-5\">\n                  <div className=\"col-3\">\n                  </div>\n                  <div className='col'>\n                    <div className={'mt-2 ' + (!!this.state.when ? '' : 'd-none')}>\n                      {['Today', 'Tomorrow'].includes(this.state.when) ? '' : 'In '}\n                      {this.state.when} at <TimeSelect />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row bg-success\">\n                  <Link to=\"/created\" className=\"col text-white h3 m-0 p-3 text-center\">\n                    Create It\n                  </Link>\n                </div>\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './semantic.css';\nimport './form.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}